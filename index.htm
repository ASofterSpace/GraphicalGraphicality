<html>

	<head>
	</head>

	<body>
		<canvas id="output" width="1000" height="500" style="width:1000px;height:500px;" onclick="drawAll()">
			Ooops, your browser does not seem to support the HTML5 canvas - please use a newer browser!
		</canvas>

		<br>

		<button onclick="increaseSize()">Bigger!</button>

		<button onclick="decreaseSize()">Smaller!</button>

		<span id="magicnumbers"></button>

		<script type="text/javascript">

// the amount of pixels in both directions that is taken up by this fun
width = 1000;
height = 500;

// the values for sin(x) and cos(x) again as taken up by this fun
sins = [];
coss = [];

// top and bottom values, just as sins and coss, but tops is ALWAYS smaller than btms (so sins and coss re-ordered)
tops = [];
btms = [];

function calculateTopsAndBtms() {

	var magicnumber1 = Math.random()*5 + 10;
	var magicnumber2 = Math.random() + 1;
	
	document.getElementById('magicnumbers').innerHTML = "Magic number 1: " + magicnumber1 + " Magic number 2: " + magicnumber2;
	
	sins = [];
	coss = [];
	tops = [];
	btms = [];

	for (var x = 0; x < width; x++) {
		if (x < width/2) {
			sins[x] = height/2 + height*x/width + (width/magicnumber1)*Math.sin(x/(width/magicnumber1));
			coss[x] = height/2 - height*x/width + (width/magicnumber1)*Math.sin((x/(width/magicnumber1))+magicnumber2);
		} else {
			sins[x] = height/2 - height + (height*x/width) + (width/magicnumber1)*Math.sin(x/(width/magicnumber1));
			coss[x] = height/2 + height - (height*x/width) + (width/magicnumber1)*Math.sin((x/(width/magicnumber1))+magicnumber2);
		}

		if (sins[x] < coss[x]) {
			tops[x] = sins[x];
			btms[x] = coss[x];
		} else {
			tops[x] = coss[x];
			btms[x] = sins[x];
		}
	}
}

function calcSin(x) {
	return tops[x];
}

function calcCos(x) {
	return btms[x];
}

function drawCosBackCircles(ctx, origx, origy) {

	var origx = width-1;
	var origy = calcSin(origx);
	
	ctx.fillStyle="#FFFFFF";
	var cosx=origx-1;
	var siny = calcSin(cosx);
	var cosy = calcCos(cosx);
	
	for (; (cosx > -1); cosx--) {
		siny = calcSin(cosx);
		cosy = calcCos(cosx);
		if (Math.abs(siny - cosy) > 100 - Math.random() * 95) {
			ctx.beginPath();
			ctx.arc(cosx, cosy + (Math.random() * (siny - cosy)), Math.random() * (width/150), 0, 2 * Math.PI);
			ctx.fill();
		}
	}
}

function drawAll() {

	calculateTopsAndBtms();

	var canvas = document.getElementById('output');
	var ctx = canvas.getContext("2d");
	
	// draw outline
	ctx.moveTo(0, 0);
	ctx.lineTo(width, 0);
	ctx.lineTo(width, height);
	ctx.lineTo(0, height);
	ctx.lineTo(0, 0);
	ctx.fillStyle="#000000";
	ctx.fill();
	
	// draw circles inside sine and cosine
	var checkSmaller = false;

	drawCosBackCircles(ctx);
}

function increaseSize() {

	width *= 1.5;
	height = width / 2;

	updateSize();
}

function decreaseSize() {

	width *= 2/3;
	height = width / 2;

	updateSize();
}

function updateSize() {

	var canvas = document.getElementById('output');

	canvas.width = width;
	canvas.height = height;
	canvas.style.width = width + "px";
	canvas.style.height = height + "px";

	drawAll();
}

drawAll();
		</script>
	</body>

</html>